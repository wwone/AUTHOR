The AUTHOR system is primarily a text-to-text program. It reads the
AUTHOR text, and creates text files that are used by other programs
to make final e-document output. One exception to this statement is
the HTML creator, which makes the output files ready to use.

Thus, this product depends on other systems to do a lot of
the heavy lifting (THANKS!).

Required JAR's
- - - - - - - - 

Required CSS Files
- - - - - - - - - - 

skeleton.css (for one mode of HTML)

poem.css (for default mode of HTML)

Required Javascript Files
- - - - - - - - - - -
poem.js (for default mode of HTML)

utility.js (for HTML output, to handle images)

reveal.js (for REVEAL mini-presentations)

Required Helper Apps
- - - - - - - - - -

kindlegen -- used only if you want to make Kindle files, such as
   AZW3 or MOBI format. Get this program from Amazon.
   
Apache FOP -- used only if you want to make PDF files. Get
   the command-line version from the Apache website
   
Calibre -- used to make EPUB format from AZW3 format. Also very
   useful for conversion of e-document formats. It has its own
   viewers, which are pretty nice. Get from website.
   
Required Fonts
- - - - - - - - 

Fonts are a rather sticky issue. Your computer may have
different fonts from those used by the person viewing your
e-document. In most cases, this is not a big issue. AUTHOR
keeps the font usage quite simple. We are not a word processor!

The biggest issue I've run into is embedding fonts for
published PDF files for print-on-demand. For instance, to
upload a PDF to LuLu (lulu.com), you must have embedded all
fonts in the PDF. Be sure you have them around, and make sure
they are specified. This is a FOP issue, and must be addressed
in this case.

For interactive PDF, or PDF that will be read on a computer only,
no big deal, each machine will find an appropriate font, and use
it.
